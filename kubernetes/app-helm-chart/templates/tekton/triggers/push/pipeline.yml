{{- if .Values.platform.createTektonResources -}}
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: {{ template "tekton.push.pipeline.name" . }}
  namespace: {{ .Values.platform.namespace }}
spec:
  params:
    - name: branch
      description: Name of the git branch
    - name: git_https_url
      description: Git https url to clone resources from
    - name: owner_and_repo
      description: Github repository owner and repo name formatted
    - name: git_short_sha
      description: Github head commit id short sha

  workspaces:
    - name: shared
      description: Workspace to checkout git repository into

  tasks:
    - name: init
      workspaces:
        - name: shared
      params:
        - name: secret_name
          value: "$(params.branch)-$(params.owner_and_repo)"
        - name: git_short_sha
          value: $(params.git_short_sha)
      taskSpec:
        results:
          - name: ecr-image
        workspaces:
          - name: shared
        params:
          - name: git_short_sha
            default: $(params.git_short_sha)
        steps:
          - name: init
            image: {{ .Values.tekton.pipelineBaseImage }}
            workingDir: $(workspaces.shared.path)
            script: |
              echo "$SSH_DEPLOY_KEY" > id_rsa
              echo -n "$ECR_REPO_URL:$ENV_PREFIX-$APP_SLUG_NAME-$(params.git_short_sha)" > $(results.ecr-image.path)
            env:
              - name: SSH_DEPLOY_KEY
                valueFrom:
                  secretKeyRef:
                    name: $(params.secret_name)
                    key: ssh-deploy-key
              - name: ECR_REPO_URL
                valueFrom:
                  secretKeyRef:
                    name: $(params.secret_name)
                    key: ecr-repo-url
              - name: ENV_PREFIX
                valueFrom:
                  secretKeyRef:
                    name: $(params.secret_name)
                    key: env-prefix
              - name: APP_SLUG_NAME
                valueFrom:
                  secretKeyRef:
                    name: $(params.secret_name)
                    key: app-slug-name

    - name: clone-repo
      runAfter:
        - init
      workspaces:
        - name: ssh-directory
          workspace: shared
        - name: output
          workspace: shared
      taskRef:
        name: git-clone
      params:
        - name: url
          value: $(params.git_https_url)
        - name: revision
          value: $(params.branch)
        - name: depth
          value: 1
        - name: deleteExisting
          value: false

    - name: delete-ssh-key
      runAfter:
        - clone-repo
      workspaces:
        - name: shared
      taskSpec:
        workspaces:
          - name: shared
        steps:
          - name: delete
            image: {{ .Values.tekton.pipelineBaseImage }}
            workingDir: $(workspaces.shared.path)
            script: |
              rm -f id_rsa

    - name: ecr-build-and-push
      runAfter:
        - clone-repo
      workspaces:
        - name: source
          workspace: shared
      taskRef:
        name: kaniko
      params:
        - name: IMAGE
          value: $(tasks.init.results.ecr-image)
{{- end -}}
